// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.1
// 	protoc        v5.26.1
// source: tours_service.proto

package tours

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type CreateCheckpointRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Checkpoint *CheckpointResponse `protobuf:"bytes,1,opt,name=checkpoint,proto3" json:"checkpoint,omitempty"`
	Status     string              `protobuf:"bytes,2,opt,name=status,proto3" json:"status,omitempty"`
	Pictures   [][]byte            `protobuf:"bytes,3,rep,name=pictures,proto3" json:"pictures,omitempty"`
}

func (x *CreateCheckpointRequest) Reset() {
	*x = CreateCheckpointRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tours_service_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateCheckpointRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateCheckpointRequest) ProtoMessage() {}

func (x *CreateCheckpointRequest) ProtoReflect() protoreflect.Message {
	mi := &file_tours_service_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateCheckpointRequest.ProtoReflect.Descriptor instead.
func (*CreateCheckpointRequest) Descriptor() ([]byte, []int) {
	return file_tours_service_proto_rawDescGZIP(), []int{0}
}

func (x *CreateCheckpointRequest) GetCheckpoint() *CheckpointResponse {
	if x != nil {
		return x.Checkpoint
	}
	return nil
}

func (x *CreateCheckpointRequest) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *CreateCheckpointRequest) GetPictures() [][]byte {
	if x != nil {
		return x.Pictures
	}
	return nil
}

type UpdateCheckpointRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Checkpoint *CheckpointResponse `protobuf:"bytes,1,opt,name=checkpoint,proto3" json:"checkpoint,omitempty"`
	Id         string              `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
	Pictures   [][]byte            `protobuf:"bytes,3,rep,name=pictures,proto3" json:"pictures,omitempty"`
}

func (x *UpdateCheckpointRequest) Reset() {
	*x = UpdateCheckpointRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tours_service_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateCheckpointRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateCheckpointRequest) ProtoMessage() {}

func (x *UpdateCheckpointRequest) ProtoReflect() protoreflect.Message {
	mi := &file_tours_service_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateCheckpointRequest.ProtoReflect.Descriptor instead.
func (*UpdateCheckpointRequest) Descriptor() ([]byte, []int) {
	return file_tours_service_proto_rawDescGZIP(), []int{1}
}

func (x *UpdateCheckpointRequest) GetCheckpoint() *CheckpointResponse {
	if x != nil {
		return x.Checkpoint
	}
	return nil
}

func (x *UpdateCheckpointRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *UpdateCheckpointRequest) GetPictures() [][]byte {
	if x != nil {
		return x.Pictures
	}
	return nil
}

type PagedCheckpoints struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Results    []*CheckpointResponse `protobuf:"bytes,1,rep,name=results,proto3" json:"results,omitempty"`
	TotalCount int32                 `protobuf:"varint,2,opt,name=totalCount,proto3" json:"totalCount,omitempty"`
}

func (x *PagedCheckpoints) Reset() {
	*x = PagedCheckpoints{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tours_service_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PagedCheckpoints) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PagedCheckpoints) ProtoMessage() {}

func (x *PagedCheckpoints) ProtoReflect() protoreflect.Message {
	mi := &file_tours_service_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PagedCheckpoints.ProtoReflect.Descriptor instead.
func (*PagedCheckpoints) Descriptor() ([]byte, []int) {
	return file_tours_service_proto_rawDescGZIP(), []int{2}
}

func (x *PagedCheckpoints) GetResults() []*CheckpointResponse {
	if x != nil {
		return x.Results
	}
	return nil
}

func (x *PagedCheckpoints) GetTotalCount() int32 {
	if x != nil {
		return x.TotalCount
	}
	return 0
}

type Blank struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Blank) Reset() {
	*x = Blank{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tours_service_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Blank) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Blank) ProtoMessage() {}

func (x *Blank) ProtoReflect() protoreflect.Message {
	mi := &file_tours_service_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Blank.ProtoReflect.Descriptor instead.
func (*Blank) Descriptor() ([]byte, []int) {
	return file_tours_service_proto_rawDescGZIP(), []int{3}
}

type Page struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Page     int32 `protobuf:"varint,1,opt,name=page,proto3" json:"page,omitempty"`
	PageSize int32 `protobuf:"varint,2,opt,name=pageSize,proto3" json:"pageSize,omitempty"`
}

func (x *Page) Reset() {
	*x = Page{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tours_service_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Page) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Page) ProtoMessage() {}

func (x *Page) ProtoReflect() protoreflect.Message {
	mi := &file_tours_service_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Page.ProtoReflect.Descriptor instead.
func (*Page) Descriptor() ([]byte, []int) {
	return file_tours_service_proto_rawDescGZIP(), []int{4}
}

func (x *Page) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *Page) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

type PageWithId struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Page     int32  `protobuf:"varint,1,opt,name=page,proto3" json:"page,omitempty"`
	PageSize int32  `protobuf:"varint,2,opt,name=pageSize,proto3" json:"pageSize,omitempty"`
	Id       string `protobuf:"bytes,3,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *PageWithId) Reset() {
	*x = PageWithId{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tours_service_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PageWithId) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PageWithId) ProtoMessage() {}

func (x *PageWithId) ProtoReflect() protoreflect.Message {
	mi := &file_tours_service_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PageWithId.ProtoReflect.Descriptor instead.
func (*PageWithId) Descriptor() ([]byte, []int) {
	return file_tours_service_proto_rawDescGZIP(), []int{5}
}

func (x *PageWithId) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *PageWithId) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *PageWithId) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type Id struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *Id) Reset() {
	*x = Id{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tours_service_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Id) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Id) ProtoMessage() {}

func (x *Id) ProtoReflect() protoreflect.Message {
	mi := &file_tours_service_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Id.ProtoReflect.Descriptor instead.
func (*Id) Descriptor() ([]byte, []int) {
	return file_tours_service_proto_rawDescGZIP(), []int{6}
}

func (x *Id) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

// Equipment
type EquipmentIds struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id           string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	EquipmentIds []string `protobuf:"bytes,2,rep,name=equipmentIds,proto3" json:"equipmentIds,omitempty"`
}

func (x *EquipmentIds) Reset() {
	*x = EquipmentIds{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tours_service_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EquipmentIds) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EquipmentIds) ProtoMessage() {}

func (x *EquipmentIds) ProtoReflect() protoreflect.Message {
	mi := &file_tours_service_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EquipmentIds.ProtoReflect.Descriptor instead.
func (*EquipmentIds) Descriptor() ([]byte, []int) {
	return file_tours_service_proto_rawDescGZIP(), []int{7}
}

func (x *EquipmentIds) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *EquipmentIds) GetEquipmentIds() []string {
	if x != nil {
		return x.EquipmentIds
	}
	return nil
}

type EquipmentResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name        string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Description string `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
}

func (x *EquipmentResponse) Reset() {
	*x = EquipmentResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tours_service_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EquipmentResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EquipmentResponse) ProtoMessage() {}

func (x *EquipmentResponse) ProtoReflect() protoreflect.Message {
	mi := &file_tours_service_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EquipmentResponse.ProtoReflect.Descriptor instead.
func (*EquipmentResponse) Descriptor() ([]byte, []int) {
	return file_tours_service_proto_rawDescGZIP(), []int{8}
}

func (x *EquipmentResponse) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *EquipmentResponse) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *EquipmentResponse) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

type EquipmentsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EquipmentResponse []*EquipmentResponse `protobuf:"bytes,1,rep,name=EquipmentResponse,proto3" json:"EquipmentResponse,omitempty"`
}

func (x *EquipmentsResponse) Reset() {
	*x = EquipmentsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tours_service_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EquipmentsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EquipmentsResponse) ProtoMessage() {}

func (x *EquipmentsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_tours_service_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EquipmentsResponse.ProtoReflect.Descriptor instead.
func (*EquipmentsResponse) Descriptor() ([]byte, []int) {
	return file_tours_service_proto_rawDescGZIP(), []int{9}
}

func (x *EquipmentsResponse) GetEquipmentResponse() []*EquipmentResponse {
	if x != nil {
		return x.EquipmentResponse
	}
	return nil
}

type UpdateEquipmentId struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Equipment *EquipmentResponse `protobuf:"bytes,1,opt,name=equipment,proto3" json:"equipment,omitempty"`
	Id        string             `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *UpdateEquipmentId) Reset() {
	*x = UpdateEquipmentId{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tours_service_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateEquipmentId) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateEquipmentId) ProtoMessage() {}

func (x *UpdateEquipmentId) ProtoReflect() protoreflect.Message {
	mi := &file_tours_service_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateEquipmentId.ProtoReflect.Descriptor instead.
func (*UpdateEquipmentId) Descriptor() ([]byte, []int) {
	return file_tours_service_proto_rawDescGZIP(), []int{10}
}

func (x *UpdateEquipmentId) GetEquipment() *EquipmentResponse {
	if x != nil {
		return x.Equipment
	}
	return nil
}

func (x *UpdateEquipmentId) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type PagedEquipmentsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Results    []*EquipmentResponse `protobuf:"bytes,1,rep,name=results,proto3" json:"results,omitempty"`
	TotalCount int32                `protobuf:"varint,2,opt,name=totalCount,proto3" json:"totalCount,omitempty"`
}

func (x *PagedEquipmentsResponse) Reset() {
	*x = PagedEquipmentsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tours_service_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PagedEquipmentsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PagedEquipmentsResponse) ProtoMessage() {}

func (x *PagedEquipmentsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_tours_service_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PagedEquipmentsResponse.ProtoReflect.Descriptor instead.
func (*PagedEquipmentsResponse) Descriptor() ([]byte, []int) {
	return file_tours_service_proto_rawDescGZIP(), []int{11}
}

func (x *PagedEquipmentsResponse) GetResults() []*EquipmentResponse {
	if x != nil {
		return x.Results
	}
	return nil
}

func (x *PagedEquipmentsResponse) GetTotalCount() int32 {
	if x != nil {
		return x.TotalCount
	}
	return 0
}

// Tour
type TourResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          string                `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	AuthorId    int64                 `protobuf:"varint,2,opt,name=authorId,proto3" json:"authorId,omitempty"`
	Name        string                `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	Description string                `protobuf:"bytes,4,opt,name=description,proto3" json:"description,omitempty"`
	Difficulty  string                `protobuf:"bytes,5,opt,name=difficulty,proto3" json:"difficulty,omitempty"`
	Status      string                `protobuf:"bytes,6,opt,name=status,proto3" json:"status,omitempty"`
	Price       float64               `protobuf:"fixed64,7,opt,name=price,proto3" json:"price,omitempty"`
	Tags        []string              `protobuf:"bytes,8,rep,name=tags,proto3" json:"tags,omitempty"`
	Equipment   []*EquipmentResponse  `protobuf:"bytes,9,rep,name=equipment,proto3" json:"equipment,omitempty"`
	Checkpoints []*CheckpointResponse `protobuf:"bytes,10,rep,name=checkpoints,proto3" json:"checkpoints,omitempty"`
}

func (x *TourResponse) Reset() {
	*x = TourResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tours_service_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TourResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TourResponse) ProtoMessage() {}

func (x *TourResponse) ProtoReflect() protoreflect.Message {
	mi := &file_tours_service_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TourResponse.ProtoReflect.Descriptor instead.
func (*TourResponse) Descriptor() ([]byte, []int) {
	return file_tours_service_proto_rawDescGZIP(), []int{12}
}

func (x *TourResponse) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *TourResponse) GetAuthorId() int64 {
	if x != nil {
		return x.AuthorId
	}
	return 0
}

func (x *TourResponse) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *TourResponse) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *TourResponse) GetDifficulty() string {
	if x != nil {
		return x.Difficulty
	}
	return ""
}

func (x *TourResponse) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *TourResponse) GetPrice() float64 {
	if x != nil {
		return x.Price
	}
	return 0
}

func (x *TourResponse) GetTags() []string {
	if x != nil {
		return x.Tags
	}
	return nil
}

func (x *TourResponse) GetEquipment() []*EquipmentResponse {
	if x != nil {
		return x.Equipment
	}
	return nil
}

func (x *TourResponse) GetCheckpoints() []*CheckpointResponse {
	if x != nil {
		return x.Checkpoints
	}
	return nil
}

type ToursResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Tours []*TourResponse `protobuf:"bytes,1,rep,name=tours,proto3" json:"tours,omitempty"`
}

func (x *ToursResponse) Reset() {
	*x = ToursResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tours_service_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ToursResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ToursResponse) ProtoMessage() {}

func (x *ToursResponse) ProtoReflect() protoreflect.Message {
	mi := &file_tours_service_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ToursResponse.ProtoReflect.Descriptor instead.
func (*ToursResponse) Descriptor() ([]byte, []int) {
	return file_tours_service_proto_rawDescGZIP(), []int{13}
}

func (x *ToursResponse) GetTours() []*TourResponse {
	if x != nil {
		return x.Tours
	}
	return nil
}

type PagedToursResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Results    []*TourResponse `protobuf:"bytes,1,rep,name=results,proto3" json:"results,omitempty"`
	TotalCount int32           `protobuf:"varint,2,opt,name=totalCount,proto3" json:"totalCount,omitempty"`
}

func (x *PagedToursResponse) Reset() {
	*x = PagedToursResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tours_service_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PagedToursResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PagedToursResponse) ProtoMessage() {}

func (x *PagedToursResponse) ProtoReflect() protoreflect.Message {
	mi := &file_tours_service_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PagedToursResponse.ProtoReflect.Descriptor instead.
func (*PagedToursResponse) Descriptor() ([]byte, []int) {
	return file_tours_service_proto_rawDescGZIP(), []int{14}
}

func (x *PagedToursResponse) GetResults() []*TourResponse {
	if x != nil {
		return x.Results
	}
	return nil
}

func (x *PagedToursResponse) GetTotalCount() int32 {
	if x != nil {
		return x.TotalCount
	}
	return 0
}

type UpdateTourId struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Tour *TourResponse `protobuf:"bytes,1,opt,name=tour,proto3" json:"tour,omitempty"`
	Id   string        `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *UpdateTourId) Reset() {
	*x = UpdateTourId{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tours_service_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateTourId) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateTourId) ProtoMessage() {}

func (x *UpdateTourId) ProtoReflect() protoreflect.Message {
	mi := &file_tours_service_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateTourId.ProtoReflect.Descriptor instead.
func (*UpdateTourId) Descriptor() ([]byte, []int) {
	return file_tours_service_proto_rawDescGZIP(), []int{15}
}

func (x *UpdateTourId) GetTour() *TourResponse {
	if x != nil {
		return x.Tour
	}
	return nil
}

func (x *UpdateTourId) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type TourByAuthorId struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Page     int32 `protobuf:"varint,1,opt,name=page,proto3" json:"page,omitempty"`
	PageSize int32 `protobuf:"varint,2,opt,name=pageSize,proto3" json:"pageSize,omitempty"`
	Id       int64 `protobuf:"varint,3,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *TourByAuthorId) Reset() {
	*x = TourByAuthorId{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tours_service_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TourByAuthorId) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TourByAuthorId) ProtoMessage() {}

func (x *TourByAuthorId) ProtoReflect() protoreflect.Message {
	mi := &file_tours_service_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TourByAuthorId.ProtoReflect.Descriptor instead.
func (*TourByAuthorId) Descriptor() ([]byte, []int) {
	return file_tours_service_proto_rawDescGZIP(), []int{16}
}

func (x *TourByAuthorId) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *TourByAuthorId) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *TourByAuthorId) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type TourEquipment struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	EquipmentId string `protobuf:"bytes,2,opt,name=equipmentId,proto3" json:"equipmentId,omitempty"`
}

func (x *TourEquipment) Reset() {
	*x = TourEquipment{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tours_service_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TourEquipment) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TourEquipment) ProtoMessage() {}

func (x *TourEquipment) ProtoReflect() protoreflect.Message {
	mi := &file_tours_service_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TourEquipment.ProtoReflect.Descriptor instead.
func (*TourEquipment) Descriptor() ([]byte, []int) {
	return file_tours_service_proto_rawDescGZIP(), []int{17}
}

func (x *TourEquipment) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *TourEquipment) GetEquipmentId() string {
	if x != nil {
		return x.EquipmentId
	}
	return ""
}

// Checkpoint
type CheckpointResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                    string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	TourId                string   `protobuf:"bytes,2,opt,name=tourId,proto3" json:"tourId,omitempty"`
	AuthorId              int64    `protobuf:"varint,3,opt,name=authorId,proto3" json:"authorId,omitempty"`
	Longitude             float64  `protobuf:"fixed64,4,opt,name=longitude,proto3" json:"longitude,omitempty"`
	Latitude              float64  `protobuf:"fixed64,5,opt,name=latitude,proto3" json:"latitude,omitempty"`
	Name                  string   `protobuf:"bytes,6,opt,name=name,proto3" json:"name,omitempty"`
	Description           string   `protobuf:"bytes,7,opt,name=description,proto3" json:"description,omitempty"`
	Pictures              []string `protobuf:"bytes,8,rep,name=pictures,proto3" json:"pictures,omitempty"`
	RequiredTimeInSeconds float64  `protobuf:"fixed64,9,opt,name=requiredTimeInSeconds,proto3" json:"requiredTimeInSeconds,omitempty"`
	// TODO checkpointSecret
	EncounterId          int64 `protobuf:"varint,10,opt,name=encounterId,proto3" json:"encounterId,omitempty"`
	IsSecretPrerequisite bool  `protobuf:"varint,11,opt,name=isSecretPrerequisite,proto3" json:"isSecretPrerequisite,omitempty"`
}

func (x *CheckpointResponse) Reset() {
	*x = CheckpointResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tours_service_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CheckpointResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckpointResponse) ProtoMessage() {}

func (x *CheckpointResponse) ProtoReflect() protoreflect.Message {
	mi := &file_tours_service_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckpointResponse.ProtoReflect.Descriptor instead.
func (*CheckpointResponse) Descriptor() ([]byte, []int) {
	return file_tours_service_proto_rawDescGZIP(), []int{18}
}

func (x *CheckpointResponse) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *CheckpointResponse) GetTourId() string {
	if x != nil {
		return x.TourId
	}
	return ""
}

func (x *CheckpointResponse) GetAuthorId() int64 {
	if x != nil {
		return x.AuthorId
	}
	return 0
}

func (x *CheckpointResponse) GetLongitude() float64 {
	if x != nil {
		return x.Longitude
	}
	return 0
}

func (x *CheckpointResponse) GetLatitude() float64 {
	if x != nil {
		return x.Latitude
	}
	return 0
}

func (x *CheckpointResponse) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CheckpointResponse) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *CheckpointResponse) GetPictures() []string {
	if x != nil {
		return x.Pictures
	}
	return nil
}

func (x *CheckpointResponse) GetRequiredTimeInSeconds() float64 {
	if x != nil {
		return x.RequiredTimeInSeconds
	}
	return 0
}

func (x *CheckpointResponse) GetEncounterId() int64 {
	if x != nil {
		return x.EncounterId
	}
	return 0
}

func (x *CheckpointResponse) GetIsSecretPrerequisite() bool {
	if x != nil {
		return x.IsSecretPrerequisite
	}
	return false
}

type CheckpointsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Checkpoints []*CheckpointResponse `protobuf:"bytes,1,rep,name=checkpoints,proto3" json:"checkpoints,omitempty"`
}

func (x *CheckpointsResponse) Reset() {
	*x = CheckpointsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tours_service_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CheckpointsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckpointsResponse) ProtoMessage() {}

func (x *CheckpointsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_tours_service_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckpointsResponse.ProtoReflect.Descriptor instead.
func (*CheckpointsResponse) Descriptor() ([]byte, []int) {
	return file_tours_service_proto_rawDescGZIP(), []int{19}
}

func (x *CheckpointsResponse) GetCheckpoints() []*CheckpointResponse {
	if x != nil {
		return x.Checkpoints
	}
	return nil
}

// TouristPosition
type TouristPositionResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        string  `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	CreatorId int64   `protobuf:"varint,2,opt,name=creatorId,proto3" json:"creatorId,omitempty"`
	Longitude float32 `protobuf:"fixed32,3,opt,name=longitude,proto3" json:"longitude,omitempty"`
	Latitude  float32 `protobuf:"fixed32,4,opt,name=latitude,proto3" json:"latitude,omitempty"`
}

func (x *TouristPositionResponse) Reset() {
	*x = TouristPositionResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tours_service_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TouristPositionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TouristPositionResponse) ProtoMessage() {}

func (x *TouristPositionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_tours_service_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TouristPositionResponse.ProtoReflect.Descriptor instead.
func (*TouristPositionResponse) Descriptor() ([]byte, []int) {
	return file_tours_service_proto_rawDescGZIP(), []int{20}
}

func (x *TouristPositionResponse) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *TouristPositionResponse) GetCreatorId() int64 {
	if x != nil {
		return x.CreatorId
	}
	return 0
}

func (x *TouristPositionResponse) GetLongitude() float32 {
	if x != nil {
		return x.Longitude
	}
	return 0
}

func (x *TouristPositionResponse) GetLatitude() float32 {
	if x != nil {
		return x.Latitude
	}
	return 0
}

type PagedTouristPositionResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Results    []*TouristPositionResponse `protobuf:"bytes,1,rep,name=results,proto3" json:"results,omitempty"`
	TotalCount int32                      `protobuf:"varint,2,opt,name=totalCount,proto3" json:"totalCount,omitempty"`
}

func (x *PagedTouristPositionResponse) Reset() {
	*x = PagedTouristPositionResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tours_service_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PagedTouristPositionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PagedTouristPositionResponse) ProtoMessage() {}

func (x *PagedTouristPositionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_tours_service_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PagedTouristPositionResponse.ProtoReflect.Descriptor instead.
func (*PagedTouristPositionResponse) Descriptor() ([]byte, []int) {
	return file_tours_service_proto_rawDescGZIP(), []int{21}
}

func (x *PagedTouristPositionResponse) GetResults() []*TouristPositionResponse {
	if x != nil {
		return x.Results
	}
	return nil
}

func (x *PagedTouristPositionResponse) GetTotalCount() int32 {
	if x != nil {
		return x.TotalCount
	}
	return 0
}

type TouristPositionByCreator struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Page     int32  `protobuf:"varint,1,opt,name=page,proto3" json:"page,omitempty"`
	PageSize int32  `protobuf:"varint,2,opt,name=pageSize,proto3" json:"pageSize,omitempty"`
	Id       string `protobuf:"bytes,3,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *TouristPositionByCreator) Reset() {
	*x = TouristPositionByCreator{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tours_service_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TouristPositionByCreator) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TouristPositionByCreator) ProtoMessage() {}

func (x *TouristPositionByCreator) ProtoReflect() protoreflect.Message {
	mi := &file_tours_service_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TouristPositionByCreator.ProtoReflect.Descriptor instead.
func (*TouristPositionByCreator) Descriptor() ([]byte, []int) {
	return file_tours_service_proto_rawDescGZIP(), []int{22}
}

func (x *TouristPositionByCreator) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *TouristPositionByCreator) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *TouristPositionByCreator) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type UpdateTouristPositionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Position *TouristPositionResponse `protobuf:"bytes,1,opt,name=position,proto3" json:"position,omitempty"`
	Id       string                   `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *UpdateTouristPositionRequest) Reset() {
	*x = UpdateTouristPositionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tours_service_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateTouristPositionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateTouristPositionRequest) ProtoMessage() {}

func (x *UpdateTouristPositionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_tours_service_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateTouristPositionRequest.ProtoReflect.Descriptor instead.
func (*UpdateTouristPositionRequest) Descriptor() ([]byte, []int) {
	return file_tours_service_proto_rawDescGZIP(), []int{23}
}

func (x *UpdateTouristPositionRequest) GetPosition() *TouristPositionResponse {
	if x != nil {
		return x.Position
	}
	return nil
}

func (x *UpdateTouristPositionRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

var File_tours_service_proto protoreflect.FileDescriptor

var file_tours_service_proto_rawDesc = []byte{
	0x0a, 0x13, 0x74, 0x6f, 0x75, 0x72, 0x73, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x82, 0x01, 0x0a, 0x17, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x43, 0x68, 0x65, 0x63, 0x6b, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x33, 0x0a, 0x0a, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x70, 0x6f, 0x69,
	0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x0a, 0x63, 0x68, 0x65, 0x63,
	0x6b, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1a,
	0x0a, 0x08, 0x70, 0x69, 0x63, 0x74, 0x75, 0x72, 0x65, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0c,
	0x52, 0x08, 0x70, 0x69, 0x63, 0x74, 0x75, 0x72, 0x65, 0x73, 0x22, 0x7a, 0x0a, 0x17, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x33, 0x0a, 0x0a, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x70, 0x6f,
	0x69, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x43, 0x68, 0x65, 0x63,
	0x6b, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x0a,
	0x63, 0x68, 0x65, 0x63, 0x6b, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x69,
	0x63, 0x74, 0x75, 0x72, 0x65, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0c, 0x52, 0x08, 0x70, 0x69,
	0x63, 0x74, 0x75, 0x72, 0x65, 0x73, 0x22, 0x61, 0x0a, 0x10, 0x50, 0x61, 0x67, 0x65, 0x64, 0x43,
	0x68, 0x65, 0x63, 0x6b, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x12, 0x2d, 0x0a, 0x07, 0x72, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x43, 0x68,
	0x65, 0x63, 0x6b, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x52, 0x07, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x74, 0x6f, 0x74,
	0x61, 0x6c, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x74,
	0x6f, 0x74, 0x61, 0x6c, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x07, 0x0a, 0x05, 0x62, 0x6c, 0x61,
	0x6e, 0x6b, 0x22, 0x36, 0x0a, 0x04, 0x50, 0x61, 0x67, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61,
	0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x1a,
	0x0a, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x22, 0x4c, 0x0a, 0x0a, 0x50, 0x61,
	0x67, 0x65, 0x57, 0x69, 0x74, 0x68, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x1a, 0x0a, 0x08,
	0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08,
	0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x14, 0x0a, 0x02, 0x49, 0x64, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x42,
	0x0a, 0x0c, 0x45, 0x71, 0x75, 0x69, 0x70, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x73, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x22,
	0x0a, 0x0c, 0x65, 0x71, 0x75, 0x69, 0x70, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x73, 0x18, 0x02,
	0x20, 0x03, 0x28, 0x09, 0x52, 0x0c, 0x65, 0x71, 0x75, 0x69, 0x70, 0x6d, 0x65, 0x6e, 0x74, 0x49,
	0x64, 0x73, 0x22, 0x59, 0x0a, 0x11, 0x45, 0x71, 0x75, 0x69, 0x70, 0x6d, 0x65, 0x6e, 0x74, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64,
	0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x56, 0x0a,
	0x12, 0x45, 0x71, 0x75, 0x69, 0x70, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x40, 0x0a, 0x11, 0x45, 0x71, 0x75, 0x69, 0x70, 0x6d, 0x65, 0x6e, 0x74,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12,
	0x2e, 0x45, 0x71, 0x75, 0x69, 0x70, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x52, 0x11, 0x45, 0x71, 0x75, 0x69, 0x70, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x55, 0x0a, 0x11, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x45,
	0x71, 0x75, 0x69, 0x70, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x30, 0x0a, 0x09, 0x65, 0x71,
	0x75, 0x69, 0x70, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e,
	0x45, 0x71, 0x75, 0x69, 0x70, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x52, 0x09, 0x65, 0x71, 0x75, 0x69, 0x70, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x67, 0x0a, 0x17,
	0x50, 0x61, 0x67, 0x65, 0x64, 0x45, 0x71, 0x75, 0x69, 0x70, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2c, 0x0a, 0x07, 0x72, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x45, 0x71, 0x75, 0x69, 0x70,
	0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x07, 0x72, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x43, 0x6f,
	0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x74, 0x6f, 0x74, 0x61, 0x6c,
	0x43, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0xbb, 0x02, 0x0a, 0x0c, 0x54, 0x6f, 0x75, 0x72, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72,
	0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72,
	0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1e, 0x0a, 0x0a, 0x64, 0x69, 0x66, 0x66,
	0x69, 0x63, 0x75, 0x6c, 0x74, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x64, 0x69,
	0x66, 0x66, 0x69, 0x63, 0x75, 0x6c, 0x74, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x12, 0x14, 0x0a, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x01, 0x52,
	0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x61, 0x67, 0x73, 0x18, 0x08,
	0x20, 0x03, 0x28, 0x09, 0x52, 0x04, 0x74, 0x61, 0x67, 0x73, 0x12, 0x30, 0x0a, 0x09, 0x65, 0x71,
	0x75, 0x69, 0x70, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x09, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e,
	0x45, 0x71, 0x75, 0x69, 0x70, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x52, 0x09, 0x65, 0x71, 0x75, 0x69, 0x70, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x35, 0x0a, 0x0b,
	0x63, 0x68, 0x65, 0x63, 0x6b, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x18, 0x0a, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x13, 0x2e, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x0b, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x70, 0x6f, 0x69,
	0x6e, 0x74, 0x73, 0x22, 0x34, 0x0a, 0x0d, 0x54, 0x6f, 0x75, 0x72, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x23, 0x0a, 0x05, 0x74, 0x6f, 0x75, 0x72, 0x73, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x54, 0x6f, 0x75, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x52, 0x05, 0x74, 0x6f, 0x75, 0x72, 0x73, 0x22, 0x5d, 0x0a, 0x12, 0x50, 0x61, 0x67,
	0x65, 0x64, 0x54, 0x6f, 0x75, 0x72, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x27, 0x0a, 0x07, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x0d, 0x2e, 0x54, 0x6f, 0x75, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52,
	0x07, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x74, 0x6f, 0x74, 0x61,
	0x6c, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x74, 0x6f,
	0x74, 0x61, 0x6c, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x41, 0x0a, 0x0c, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x54, 0x6f, 0x75, 0x72, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x04, 0x74, 0x6f, 0x75, 0x72,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x54, 0x6f, 0x75, 0x72, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x04, 0x74, 0x6f, 0x75, 0x72, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x50, 0x0a, 0x0e, 0x54,
	0x6f, 0x75, 0x72, 0x42, 0x79, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x49, 0x64, 0x12, 0x12, 0x0a,
	0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x70, 0x61, 0x67,
	0x65, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x22, 0x41, 0x0a,
	0x0d, 0x54, 0x6f, 0x75, 0x72, 0x45, 0x71, 0x75, 0x69, 0x70, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x20,
	0x0a, 0x0b, 0x65, 0x71, 0x75, 0x69, 0x70, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x65, 0x71, 0x75, 0x69, 0x70, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x64,
	0x22, 0xf0, 0x02, 0x0a, 0x12, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x74, 0x6f, 0x75, 0x72, 0x49,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x74, 0x6f, 0x75, 0x72, 0x49, 0x64, 0x12,
	0x1a, 0x0a, 0x08, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x08, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x6c,
	0x6f, 0x6e, 0x67, 0x69, 0x74, 0x75, 0x64, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x01, 0x52, 0x09,
	0x6c, 0x6f, 0x6e, 0x67, 0x69, 0x74, 0x75, 0x64, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x6c, 0x61, 0x74,
	0x69, 0x74, 0x75, 0x64, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x01, 0x52, 0x08, 0x6c, 0x61, 0x74,
	0x69, 0x74, 0x75, 0x64, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x70,
	0x69, 0x63, 0x74, 0x75, 0x72, 0x65, 0x73, 0x18, 0x08, 0x20, 0x03, 0x28, 0x09, 0x52, 0x08, 0x70,
	0x69, 0x63, 0x74, 0x75, 0x72, 0x65, 0x73, 0x12, 0x34, 0x0a, 0x15, 0x72, 0x65, 0x71, 0x75, 0x69,
	0x72, 0x65, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x49, 0x6e, 0x53, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x73,
	0x18, 0x09, 0x20, 0x01, 0x28, 0x01, 0x52, 0x15, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x64,
	0x54, 0x69, 0x6d, 0x65, 0x49, 0x6e, 0x53, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x73, 0x12, 0x20, 0x0a,
	0x0b, 0x65, 0x6e, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x65, 0x72, 0x49, 0x64, 0x18, 0x0a, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x0b, 0x65, 0x6e, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x65, 0x72, 0x49, 0x64, 0x12,
	0x32, 0x0a, 0x14, 0x69, 0x73, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x50, 0x72, 0x65, 0x72, 0x65,
	0x71, 0x75, 0x69, 0x73, 0x69, 0x74, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x08, 0x52, 0x14, 0x69,
	0x73, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x50, 0x72, 0x65, 0x72, 0x65, 0x71, 0x75, 0x69, 0x73,
	0x69, 0x74, 0x65, 0x22, 0x4c, 0x0a, 0x13, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x70, 0x6f, 0x69, 0x6e,
	0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x35, 0x0a, 0x0b, 0x63, 0x68,
	0x65, 0x63, 0x6b, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x13, 0x2e, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x52, 0x0b, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x70, 0x6f, 0x69, 0x6e, 0x74,
	0x73, 0x22, 0x81, 0x01, 0x0a, 0x17, 0x54, 0x6f, 0x75, 0x72, 0x69, 0x73, 0x74, 0x50, 0x6f, 0x73,
	0x69, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1c, 0x0a,
	0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x6c,
	0x6f, 0x6e, 0x67, 0x69, 0x74, 0x75, 0x64, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x02, 0x52, 0x09,
	0x6c, 0x6f, 0x6e, 0x67, 0x69, 0x74, 0x75, 0x64, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x6c, 0x61, 0x74,
	0x69, 0x74, 0x75, 0x64, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x02, 0x52, 0x08, 0x6c, 0x61, 0x74,
	0x69, 0x74, 0x75, 0x64, 0x65, 0x22, 0x72, 0x0a, 0x1c, 0x50, 0x61, 0x67, 0x65, 0x64, 0x54, 0x6f,
	0x75, 0x72, 0x69, 0x73, 0x74, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x32, 0x0a, 0x07, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x54, 0x6f, 0x75, 0x72, 0x69, 0x73, 0x74,
	0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x52, 0x07, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x74, 0x6f, 0x74,
	0x61, 0x6c, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x74,
	0x6f, 0x74, 0x61, 0x6c, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x5a, 0x0a, 0x18, 0x54, 0x6f, 0x75,
	0x72, 0x69, 0x73, 0x74, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x79, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x6f, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x67,
	0x65, 0x53, 0x69, 0x7a, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x70, 0x61, 0x67,
	0x65, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x64, 0x0a, 0x1c, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54,
	0x6f, 0x75, 0x72, 0x69, 0x73, 0x74, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x34, 0x0a, 0x08, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x54, 0x6f, 0x75, 0x72, 0x69, 0x73,
	0x74, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x52, 0x08, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x32, 0xd0, 0x0a, 0x0a, 0x04,
	0x54, 0x6f, 0x75, 0x72, 0x12, 0x3d, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x41, 0x76, 0x61, 0x69, 0x6c,
	0x61, 0x62, 0x6c, 0x65, 0x45, 0x71, 0x75, 0x69, 0x70, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x0d, 0x2e,
	0x45, 0x71, 0x75, 0x69, 0x70, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x73, 0x1a, 0x13, 0x2e, 0x45,
	0x71, 0x75, 0x69, 0x70, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x00, 0x12, 0x34, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x45, 0x71, 0x75,
	0x69, 0x70, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x05, 0x2e, 0x50, 0x61, 0x67, 0x65, 0x1a, 0x18, 0x2e,
	0x50, 0x61, 0x67, 0x65, 0x64, 0x45, 0x71, 0x75, 0x69, 0x70, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x29, 0x0a, 0x0c, 0x47, 0x65, 0x74,
	0x45, 0x71, 0x75, 0x69, 0x70, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x03, 0x2e, 0x49, 0x64, 0x1a, 0x12,
	0x2e, 0x45, 0x71, 0x75, 0x69, 0x70, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x00, 0x12, 0x3b, 0x0a, 0x0f, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x45, 0x71,
	0x75, 0x69, 0x70, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x12, 0x2e, 0x45, 0x71, 0x75, 0x69, 0x70, 0x6d,
	0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x1a, 0x12, 0x2e, 0x45, 0x71,
	0x75, 0x69, 0x70, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x00, 0x12, 0x3b, 0x0a, 0x0f, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x45, 0x71, 0x75, 0x69, 0x70,
	0x6d, 0x65, 0x6e, 0x74, 0x12, 0x12, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x45, 0x71, 0x75,
	0x69, 0x70, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x1a, 0x12, 0x2e, 0x45, 0x71, 0x75, 0x69, 0x70,
	0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x20,
	0x0a, 0x0f, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x45, 0x71, 0x75, 0x69, 0x70, 0x6d, 0x65, 0x6e,
	0x74, 0x12, 0x03, 0x2e, 0x49, 0x64, 0x1a, 0x06, 0x2e, 0x62, 0x6c, 0x61, 0x6e, 0x6b, 0x22, 0x00,
	0x12, 0x2a, 0x0a, 0x0a, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x54, 0x6f, 0x75, 0x72, 0x12, 0x05,
	0x2e, 0x50, 0x61, 0x67, 0x65, 0x1a, 0x13, 0x2e, 0x50, 0x61, 0x67, 0x65, 0x64, 0x54, 0x6f, 0x75,
	0x72, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x1f, 0x0a, 0x07,
	0x47, 0x65, 0x74, 0x54, 0x6f, 0x75, 0x72, 0x12, 0x03, 0x2e, 0x49, 0x64, 0x1a, 0x0d, 0x2e, 0x54,
	0x6f, 0x75, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x2c, 0x0a,
	0x0a, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x6f, 0x75, 0x72, 0x12, 0x0d, 0x2e, 0x54, 0x6f,
	0x75, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x1a, 0x0d, 0x2e, 0x54, 0x6f, 0x75,
	0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x2c, 0x0a, 0x0a, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x6f, 0x75, 0x72, 0x12, 0x0d, 0x2e, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x54, 0x6f, 0x75, 0x72, 0x49, 0x64, 0x1a, 0x0d, 0x2e, 0x54, 0x6f, 0x75, 0x72, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x1b, 0x0a, 0x0a, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x54, 0x6f, 0x75, 0x72, 0x12, 0x03, 0x2e, 0x49, 0x64, 0x1a, 0x06, 0x2e, 0x62,
	0x6c, 0x61, 0x6e, 0x6b, 0x22, 0x00, 0x12, 0x36, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x54, 0x6f, 0x75,
	0x72, 0x42, 0x79, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x49, 0x64, 0x12, 0x0f, 0x2e, 0x54, 0x6f,
	0x75, 0x72, 0x42, 0x79, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x49, 0x64, 0x1a, 0x0e, 0x2e, 0x54,
	0x6f, 0x75, 0x72, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x2c,
	0x0a, 0x10, 0x41, 0x64, 0x64, 0x54, 0x6f, 0x75, 0x72, 0x45, 0x71, 0x75, 0x69, 0x70, 0x6d, 0x65,
	0x6e, 0x74, 0x12, 0x0e, 0x2e, 0x54, 0x6f, 0x75, 0x72, 0x45, 0x71, 0x75, 0x69, 0x70, 0x6d, 0x65,
	0x6e, 0x74, 0x1a, 0x06, 0x2e, 0x62, 0x6c, 0x61, 0x6e, 0x6b, 0x22, 0x00, 0x12, 0x2f, 0x0a, 0x13,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x54, 0x6f, 0x75, 0x72, 0x45, 0x71, 0x75, 0x69, 0x70, 0x6d,
	0x65, 0x6e, 0x74, 0x12, 0x0e, 0x2e, 0x54, 0x6f, 0x75, 0x72, 0x45, 0x71, 0x75, 0x69, 0x70, 0x6d,
	0x65, 0x6e, 0x74, 0x1a, 0x06, 0x2e, 0x62, 0x6c, 0x61, 0x6e, 0x6b, 0x22, 0x00, 0x12, 0x2f, 0x0a,
	0x11, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x70, 0x6f, 0x69, 0x6e,
	0x74, 0x73, 0x12, 0x05, 0x2e, 0x50, 0x61, 0x67, 0x65, 0x1a, 0x11, 0x2e, 0x50, 0x61, 0x67, 0x65,
	0x64, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x22, 0x00, 0x12, 0x3e,
	0x0a, 0x17, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x70, 0x6f, 0x69,
	0x6e, 0x74, 0x73, 0x42, 0x79, 0x54, 0x6f, 0x75, 0x72, 0x12, 0x0b, 0x2e, 0x50, 0x61, 0x67, 0x65,
	0x57, 0x69, 0x74, 0x68, 0x49, 0x64, 0x1a, 0x14, 0x2e, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x70, 0x6f,
	0x69, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x2f,
	0x0a, 0x11, 0x47, 0x65, 0x74, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x42,
	0x79, 0x49, 0x64, 0x12, 0x03, 0x2e, 0x49, 0x64, 0x1a, 0x13, 0x2e, 0x43, 0x68, 0x65, 0x63, 0x6b,
	0x70, 0x6f, 0x69, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12,
	0x43, 0x0a, 0x10, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x70, 0x6f,
	0x69, 0x6e, 0x74, 0x12, 0x18, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x68, 0x65, 0x63,
	0x6b, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x13, 0x2e,
	0x43, 0x68, 0x65, 0x63, 0x6b, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x00, 0x12, 0x43, 0x0a, 0x10, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x68,
	0x65, 0x63, 0x6b, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x12, 0x18, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x13, 0x2e, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x21, 0x0a, 0x10, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x12, 0x03, 0x2e,
	0x49, 0x64, 0x1a, 0x06, 0x2e, 0x62, 0x6c, 0x61, 0x6e, 0x6b, 0x22, 0x00, 0x12, 0x3f, 0x0a, 0x15,
	0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x54, 0x6f, 0x75, 0x72, 0x69, 0x73, 0x74, 0x50, 0x6f, 0x73,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x05, 0x2e, 0x50, 0x61, 0x67, 0x65, 0x1a, 0x1d, 0x2e, 0x50,
	0x61, 0x67, 0x65, 0x64, 0x54, 0x6f, 0x75, 0x72, 0x69, 0x73, 0x74, 0x50, 0x6f, 0x73, 0x69, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x55, 0x0a,
	0x1c, 0x47, 0x65, 0x74, 0x54, 0x6f, 0x75, 0x72, 0x69, 0x73, 0x74, 0x50, 0x6f, 0x73, 0x74, 0x69,
	0x6f, 0x6e, 0x42, 0x79, 0x43, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x49, 0x64, 0x12, 0x19, 0x2e,
	0x54, 0x6f, 0x75, 0x72, 0x69, 0x73, 0x74, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x42,
	0x79, 0x43, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x1a, 0x18, 0x2e, 0x54, 0x6f, 0x75, 0x72, 0x69,
	0x73, 0x74, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x00, 0x12, 0x4c, 0x0a, 0x14, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x6f,
	0x75, 0x72, 0x69, 0x73, 0x74, 0x50, 0x6f, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x18, 0x2e, 0x54,
	0x6f, 0x75, 0x72, 0x69, 0x73, 0x74, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x1a, 0x18, 0x2e, 0x54, 0x6f, 0x75, 0x72, 0x69, 0x73, 0x74,
	0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x00, 0x12, 0x52, 0x0a, 0x15, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x6f, 0x75, 0x72,
	0x69, 0x73, 0x74, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1d, 0x2e, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x54, 0x6f, 0x75, 0x72, 0x69, 0x73, 0x74, 0x50, 0x6f, 0x73, 0x69, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x18, 0x2e, 0x54, 0x6f, 0x75,
	0x72, 0x69, 0x73, 0x74, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x26, 0x0a, 0x15, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x54, 0x6f, 0x75, 0x72, 0x69, 0x73, 0x74, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x03, 0x2e, 0x49, 0x64, 0x1a, 0x06, 0x2e, 0x62, 0x6c, 0x61, 0x6e, 0x6b, 0x22, 0x00, 0x42, 0x0d,
	0x5a, 0x0b, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x74, 0x6f, 0x75, 0x72, 0x73, 0x62, 0x06, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_tours_service_proto_rawDescOnce sync.Once
	file_tours_service_proto_rawDescData = file_tours_service_proto_rawDesc
)

func file_tours_service_proto_rawDescGZIP() []byte {
	file_tours_service_proto_rawDescOnce.Do(func() {
		file_tours_service_proto_rawDescData = protoimpl.X.CompressGZIP(file_tours_service_proto_rawDescData)
	})
	return file_tours_service_proto_rawDescData
}

var file_tours_service_proto_msgTypes = make([]protoimpl.MessageInfo, 24)
var file_tours_service_proto_goTypes = []interface{}{
	(*CreateCheckpointRequest)(nil),      // 0: CreateCheckpointRequest
	(*UpdateCheckpointRequest)(nil),      // 1: UpdateCheckpointRequest
	(*PagedCheckpoints)(nil),             // 2: PagedCheckpoints
	(*Blank)(nil),                        // 3: blank
	(*Page)(nil),                         // 4: Page
	(*PageWithId)(nil),                   // 5: PageWithId
	(*Id)(nil),                           // 6: Id
	(*EquipmentIds)(nil),                 // 7: EquipmentIds
	(*EquipmentResponse)(nil),            // 8: EquipmentResponse
	(*EquipmentsResponse)(nil),           // 9: EquipmentsResponse
	(*UpdateEquipmentId)(nil),            // 10: UpdateEquipmentId
	(*PagedEquipmentsResponse)(nil),      // 11: PagedEquipmentsResponse
	(*TourResponse)(nil),                 // 12: TourResponse
	(*ToursResponse)(nil),                // 13: ToursResponse
	(*PagedToursResponse)(nil),           // 14: PagedToursResponse
	(*UpdateTourId)(nil),                 // 15: UpdateTourId
	(*TourByAuthorId)(nil),               // 16: TourByAuthorId
	(*TourEquipment)(nil),                // 17: TourEquipment
	(*CheckpointResponse)(nil),           // 18: CheckpointResponse
	(*CheckpointsResponse)(nil),          // 19: CheckpointsResponse
	(*TouristPositionResponse)(nil),      // 20: TouristPositionResponse
	(*PagedTouristPositionResponse)(nil), // 21: PagedTouristPositionResponse
	(*TouristPositionByCreator)(nil),     // 22: TouristPositionByCreator
	(*UpdateTouristPositionRequest)(nil), // 23: UpdateTouristPositionRequest
}
var file_tours_service_proto_depIdxs = []int32{
	18, // 0: CreateCheckpointRequest.checkpoint:type_name -> CheckpointResponse
	18, // 1: UpdateCheckpointRequest.checkpoint:type_name -> CheckpointResponse
	18, // 2: PagedCheckpoints.results:type_name -> CheckpointResponse
	8,  // 3: EquipmentsResponse.EquipmentResponse:type_name -> EquipmentResponse
	8,  // 4: UpdateEquipmentId.equipment:type_name -> EquipmentResponse
	8,  // 5: PagedEquipmentsResponse.results:type_name -> EquipmentResponse
	8,  // 6: TourResponse.equipment:type_name -> EquipmentResponse
	18, // 7: TourResponse.checkpoints:type_name -> CheckpointResponse
	12, // 8: ToursResponse.tours:type_name -> TourResponse
	12, // 9: PagedToursResponse.results:type_name -> TourResponse
	12, // 10: UpdateTourId.tour:type_name -> TourResponse
	18, // 11: CheckpointsResponse.checkpoints:type_name -> CheckpointResponse
	20, // 12: PagedTouristPositionResponse.results:type_name -> TouristPositionResponse
	20, // 13: UpdateTouristPositionRequest.position:type_name -> TouristPositionResponse
	7,  // 14: Tour.GetAvailableEquipment:input_type -> EquipmentIds
	4,  // 15: Tour.GetAllEquipment:input_type -> Page
	6,  // 16: Tour.GetEquipment:input_type -> Id
	8,  // 17: Tour.CreateEquipment:input_type -> EquipmentResponse
	10, // 18: Tour.UpdateEquipment:input_type -> UpdateEquipmentId
	6,  // 19: Tour.DeleteEquipment:input_type -> Id
	4,  // 20: Tour.GetAllTour:input_type -> Page
	6,  // 21: Tour.GetTour:input_type -> Id
	12, // 22: Tour.CreateTour:input_type -> TourResponse
	15, // 23: Tour.UpdateTour:input_type -> UpdateTourId
	6,  // 24: Tour.DeleteTour:input_type -> Id
	16, // 25: Tour.GetTourByAuthorId:input_type -> TourByAuthorId
	17, // 26: Tour.AddTourEquipment:input_type -> TourEquipment
	17, // 27: Tour.DeleteTourEquipment:input_type -> TourEquipment
	4,  // 28: Tour.GetAllCheckpoints:input_type -> Page
	5,  // 29: Tour.GetAllCheckpointsByTour:input_type -> PageWithId
	6,  // 30: Tour.GetCheckpointById:input_type -> Id
	0,  // 31: Tour.CreateCheckpoint:input_type -> CreateCheckpointRequest
	1,  // 32: Tour.UpdateCheckpoint:input_type -> UpdateCheckpointRequest
	6,  // 33: Tour.DeleteCheckpoint:input_type -> Id
	4,  // 34: Tour.GetAllTouristPostions:input_type -> Page
	22, // 35: Tour.GetTouristPostionByCreatorId:input_type -> TouristPositionByCreator
	20, // 36: Tour.CreateTouristPostion:input_type -> TouristPositionResponse
	23, // 37: Tour.UpdateTouristPosition:input_type -> UpdateTouristPositionRequest
	6,  // 38: Tour.DeleteTouristPosition:input_type -> Id
	9,  // 39: Tour.GetAvailableEquipment:output_type -> EquipmentsResponse
	11, // 40: Tour.GetAllEquipment:output_type -> PagedEquipmentsResponse
	8,  // 41: Tour.GetEquipment:output_type -> EquipmentResponse
	8,  // 42: Tour.CreateEquipment:output_type -> EquipmentResponse
	8,  // 43: Tour.UpdateEquipment:output_type -> EquipmentResponse
	3,  // 44: Tour.DeleteEquipment:output_type -> blank
	14, // 45: Tour.GetAllTour:output_type -> PagedToursResponse
	12, // 46: Tour.GetTour:output_type -> TourResponse
	12, // 47: Tour.CreateTour:output_type -> TourResponse
	12, // 48: Tour.UpdateTour:output_type -> TourResponse
	3,  // 49: Tour.DeleteTour:output_type -> blank
	13, // 50: Tour.GetTourByAuthorId:output_type -> ToursResponse
	3,  // 51: Tour.AddTourEquipment:output_type -> blank
	3,  // 52: Tour.DeleteTourEquipment:output_type -> blank
	2,  // 53: Tour.GetAllCheckpoints:output_type -> PagedCheckpoints
	19, // 54: Tour.GetAllCheckpointsByTour:output_type -> CheckpointsResponse
	18, // 55: Tour.GetCheckpointById:output_type -> CheckpointResponse
	18, // 56: Tour.CreateCheckpoint:output_type -> CheckpointResponse
	18, // 57: Tour.UpdateCheckpoint:output_type -> CheckpointResponse
	3,  // 58: Tour.DeleteCheckpoint:output_type -> blank
	21, // 59: Tour.GetAllTouristPostions:output_type -> PagedTouristPositionResponse
	20, // 60: Tour.GetTouristPostionByCreatorId:output_type -> TouristPositionResponse
	20, // 61: Tour.CreateTouristPostion:output_type -> TouristPositionResponse
	20, // 62: Tour.UpdateTouristPosition:output_type -> TouristPositionResponse
	3,  // 63: Tour.DeleteTouristPosition:output_type -> blank
	39, // [39:64] is the sub-list for method output_type
	14, // [14:39] is the sub-list for method input_type
	14, // [14:14] is the sub-list for extension type_name
	14, // [14:14] is the sub-list for extension extendee
	0,  // [0:14] is the sub-list for field type_name
}

func init() { file_tours_service_proto_init() }
func file_tours_service_proto_init() {
	if File_tours_service_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_tours_service_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateCheckpointRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tours_service_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateCheckpointRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tours_service_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PagedCheckpoints); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tours_service_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Blank); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tours_service_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Page); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tours_service_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PageWithId); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tours_service_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Id); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tours_service_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EquipmentIds); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tours_service_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EquipmentResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tours_service_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EquipmentsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tours_service_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateEquipmentId); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tours_service_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PagedEquipmentsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tours_service_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TourResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tours_service_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ToursResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tours_service_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PagedToursResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tours_service_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateTourId); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tours_service_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TourByAuthorId); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tours_service_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TourEquipment); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tours_service_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CheckpointResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tours_service_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CheckpointsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tours_service_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TouristPositionResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tours_service_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PagedTouristPositionResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tours_service_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TouristPositionByCreator); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tours_service_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateTouristPositionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_tours_service_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   24,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_tours_service_proto_goTypes,
		DependencyIndexes: file_tours_service_proto_depIdxs,
		MessageInfos:      file_tours_service_proto_msgTypes,
	}.Build()
	File_tours_service_proto = out.File
	file_tours_service_proto_rawDesc = nil
	file_tours_service_proto_goTypes = nil
	file_tours_service_proto_depIdxs = nil
}
