
syntax = "proto3";

option go_package = "proto/tours";

service Tour {
	// Equipment
	rpc GetAvailableEquipment (EquipmentIds) returns (EquipmentsResponse) {}
    rpc GetAllEquipment (Page) returns (PagedEquipmentsResponse) {}
	rpc GetEquipment (Id) returns (EquipmentResponse) {}
	rpc CreateEquipment (EquipmentResponse) returns (EquipmentResponse) {}
	rpc UpdateEquipment (UpdateEquipmentId) returns (EquipmentResponse) {}
	rpc DeleteEquipment (Id) returns (EquipmentResponse) {}

	// Tour
	rpc GetAllTour (Page) returns (PagedToursResponse) {}
    rpc GetTour (Id) returns (TourResponse) {}
	rpc CreateTour (TourResponse) returns (TourResponse) {}
    rpc UpdateTour (UpdateTourId) returns (TourResponse) {}
    rpc DeleteTour (Id) returns (blank) {}
    rpc GetTourByAuthorId (TourByAuthorId) returns (ToursResponse) {}
	rpc AddTourEquipment (TourEquipment) returns (blank) {}
	rpc DeleteTourEquipment (TourEquipment) returns (blank) {}

	// PublishedTour
	// TourReview
	// PublicCheckpoint
    // Checkpoint
	// TouristPosition
	// TourExecution
}
message blank{}
message Page{
	int32 page = 1;
	int32 pageSize = 2;
}
message Id{
	string id = 1;
}

// Equipment
message EquipmentIds{
	string id = 1;
	repeated string equipmentIds = 2;
}
message EquipmentResponse{
	string id = 1;
	string name = 2;
	string description = 3;
}
message EquipmentsResponse{
	repeated EquipmentResponse EquipmentResponse = 1;
}
message UpdateEquipmentId{
	EquipmentResponse equipment = 1;
	string id = 2;
}
message PagedEquipmentsResponse{
	repeated EquipmentResponse results = 1;
	int32 totalCounts = 2;
}

// Tour
message TourResponse{
	string id = 1;
	int64 authorId = 2;
	string name = 3;
    string description = 4;
    string difficulty = 5;
	string status = 6;
	double price = 7;
    repeated string tags = 8;
    repeated EquipmentResponse equipment = 9;
    repeated CheckpointResponse checkpoints = 10;
}
message ToursResponse{
	repeated TourResponse tours = 1;
}
message PagedToursResponse{
	repeated TourResponse results = 1;
	int32 totalCounts = 2;
}
message UpdateTourId{
	TourResponse tour = 1;
	string id = 2;
}
message TourByAuthorId{
	int32 page = 1;
	int32 pageSize = 2;
	int64 id = 3;
}
message TourEquipment{
	string id = 1;
	string equipmentId = 2;
}

// PublishedTour

// TourReview

// PublicCheckpoint

// Checkpoint
message CheckpointResponse{
 	string id = 1;
	string tourId = 2;
	int64 authorId = 3;
	double longitude = 4;
	double latitude = 5;
	string name = 6;
	string description = 7;
	repeated string pictures = 8;
	double requiredTimeInSeconds = 9;
	//TODO checkpointSecret 
	int64 encounterId = 10;
	bool isSecretPrerequisite = 11;
}

// TouristPosition

// TourExecution
